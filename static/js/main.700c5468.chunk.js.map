{"version":3,"sources":["components/SpeedSlider.js","components/ArraySizeSlider.js","components/Bar.js","assets/header.jpg","assets/favicon.png","components/Header.js","components/AlgosDropdown.js","components/Legends.js","algorithms/bubbleSort.js","algorithms/quickSort.js","algorithms/mergeSort.js","algorithms/insertionSort.js","algorithms/selectionSort.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","input","SpeedSlider","props","classes","React","useState","value","setValue","useEffect","setVal","className","Typography","id","gutterBottom","Grid","container","spacing","alignItems","item","xs","Slider","onChange","event","newValue","aria-labelledby","Input","margin","target","Number","onBlur","inputProps","step","min","max","type","ArraySizeSlider","Bar","len","val","i","swapRef","selectedRef","compRef","sortedRef","colorRef","window","innerWidth","height","innerHeight","includes","Tooltip","title","style","border","backgroundColor","Header","src","algoIcon","alt","header","href","rel","fontSize","theme","formControl","minWidth","selectEmpty","marginTop","AlgosDropdown","algo","setAlgo","FormControl","variant","InputLabel","Select","labelId","label","MenuItem","Legends","console","log","bubbleSort","selectionSort","quickSort","mergeSort","insertionSort","map","x","justifyContent","sleep","ms","Promise","resolve","setTimeout","ar","speed","setAr","setSwapIndex","setCompIndex","setSortedIndex","a","b","delayForSwap","j","delayForComparision","temp","prevArray","delay","setSelectedIndex","b1","m","k","App","setLen","setSpeed","swapIndex","selectedIndex","compIndex","sortedIndex","bars","setBars","slider","setSlider","Array","from","length","Math","floor","random","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.700c5468.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n  },\r\n  input: {\r\n    width: 42,\r\n  },\r\n});\r\n\r\nexport default function SpeedSlider(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(50);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n   \r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.setVal(100-value);\r\n  },[value,props]);\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 0) {\r\n      setValue(0);\r\n    } else if (value > 100) {\r\n      setValue(100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"input-slider\" gutterBottom>\r\n        Select Speed\r\n      </Typography>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item>\r\n          <SpeedIcon />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider\r\n            value={typeof value === 'number' ? value : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={value}\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              step: 10,\r\n              min: 0,\r\n              max: 100,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n  },\r\n  input: {\r\n    width: 42,\r\n  },\r\n});\r\n\r\nexport default function ArraySizeSlider({value, setValue}) {\r\n  const classes = useStyles();\r\n  //const [value, setValue] = React.useState(30);\r\n  \r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  \r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 0) {\r\n      setValue(0);\r\n    } else if (value > 100) {\r\n      setValue(100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"input-slider\" gutterBottom>\r\n        Select Array Size\r\n      </Typography>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item>\r\n          <PlaylistAddIcon />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider\r\n            value={typeof value === 'number' ? value : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={value}\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              step: 10,\r\n              min: 0,\r\n              max: 100,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function Bar({len,max,val,i,swapRef,selectedRef,compRef,sortedRef}) {\r\n    let colorRef='#3cb1e0';\r\n    let width=(window.innerWidth)/(2.4*len);\r\n    let height=((3*window.innerHeight/5)/max)*val;\r\n\r\n    if(swapRef.includes(i)){\r\n        colorRef=\"red\";\r\n    }\r\n    if(compRef.includes(i)){\r\n        colorRef=\"yellow\";\r\n    }\r\n    if(sortedRef.includes(i)){\r\n        colorRef=\"#09f272\";\r\n    }\r\n    if(selectedRef.includes(i)){\r\n        colorRef=\"#ff00fa\";\r\n    }\r\n    \r\n\r\n    if(window.innerWidth<500){\r\n    height=(window.innerHeight)/(2.4*len);\r\n    width=((3*window.innerWidth/5)/max)*val;\r\n    }\r\n    return (\r\n        <Tooltip key={i} title={val} >\r\n            \r\n        <li className=\"bar\" key={i}  style={{\r\n                                    border:'1px solid black',\r\n                                    backgroundColor:colorRef,\r\n                                    width,\r\n                                    height\r\n                                    }}>\r\n            {val}\r\n        </li>\r\n        </Tooltip>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/header.84f5bc42.jpg\";","export default __webpack_public_path__ + \"static/media/favicon.a5226a6a.png\";","import React from 'react';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\n\r\nimport header from '../assets/header.jpg';\r\nimport algoIcon from '../assets/favicon.png';\r\nimport '../App.css';\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"container\"  >\r\n            <div className=\"header-text\"><img src={algoIcon} alt=\"Algo-Icon\" className=\"algo-image\" /> Algorithms Visualizer</div>\r\n            <img src={header} alt=\"header\" className=\"header-image\" />\r\n            <a href=\"https://github.com/aashishwastaken/Sorting-Algorithm-Visualizer\"\r\n                target=\"_blank\" rel=\"noreferrer\" >\r\n                <div className=\"button\">GitHub<LaunchIcon style={{fontSize:\"1em\",width:'em'}} />\r\n                </div>\r\n            </a>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AlgosDropdown({algo,setAlgo}) {\r\n    const classes = useStyles();\r\n    \r\n\r\n    const handleChange = (event) => {\r\n        setAlgo(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl} >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">Algorithm</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={algo}\r\n                onChange={handleChange}\r\n                label=\"Algorithm\"\r\n            >\r\n                \r\n                <MenuItem value=\"bubbleSort\">Bubble Sort</MenuItem>\r\n                <MenuItem value=\"selectionSort\">Selection Sort</MenuItem>\r\n                <MenuItem value=\"mergeSort\">Merge Sort</MenuItem>\r\n                <MenuItem value=\"insertionSort\">Insertion Sort</MenuItem>\r\n                <MenuItem value=\"quickSort\">Quick Sort</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../App.css';\r\n\r\nexport default function Legends({algo}) {\r\n\r\n    let legendsData={\r\n        bubbleSort:[\r\n            ['red','Swap'],\r\n            ['yellow','Comparision'],\r\n            ['#09f272','Sorted']\r\n        ],\r\n        selectionSort:[\r\n            ['red','Swap'],\r\n            ['yellow','Hunting the min value'],\r\n            ['#09f272','Sorted'],\r\n            ['#ff00fa','Current min value']\r\n        ],\r\n        quickSort:[\r\n            ['red','Swap'],\r\n            ['yellow','Comparision'],\r\n            ['#09f272','Sorted']\r\n        ],\r\n        mergeSort:[\r\n            ['red','Swap'],\r\n            ['yellow','Comparision'],\r\n            ['#09f272','Sorted']\r\n        ],\r\n        insertionSort:[\r\n            ['red','Swap'],\r\n            ['yellow','Comparision'],\r\n            ['#09f272','Sorted']\r\n        ]\r\n\r\n    }\r\nconsole.log(algo);\r\n    return (\r\n        <div id='legend'>Legends\r\n            {legendsData[algo].map((x,i)=>{\r\n                \r\n                return ( <div className=\"row\" style={{justifyContent:'flex-start'}}>\r\n                    <div className=\"legendColor\" style={{backgroundColor:x[0]}} ></div>\r\n                    <div className=\"legendTitle\" >{x[1]}</div>\r\n                    \r\n                </div>);\r\n})}\r\n        </div>\r\n    )\r\n}\r\n","function sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n\r\nlet bubbleSort = async (ar, len,speed, setAr, setSwapIndex, setCompIndex,setSortedIndex) => {\r\n  //let [swapIndex, setSwapIndex] = useState([-1, -1]);\r\n  \r\n    let b = ar;\r\n\r\n  //console.log('bubbleSort before', b);\r\n  let delayForSwap = async (b, i, j) => {\r\n    //console.log('swap', b[i], b[j]);\r\n\r\n    setSwapIndex([i, j]);\r\n    await sleep((speed));\r\n    setAr([...b]);\r\n    setSwapIndex([-1, -1]);\r\n  }\r\n  let delayForComparision = async (b, i, j) => {\r\n    //console.log('swap', b[i], b[j]);\r\n\r\n    setCompIndex([i, j]);\r\n    await sleep((speed));\r\n    setAr([...b]);\r\n    setCompIndex([-1, -1]);\r\n  }\r\n \r\n    \r\n   \r\n  for (let i = 0; i < len - 1; i++) {\r\n\r\n    for (let j = 0; j < len - i - 1; j++ ) {\r\n      await delayForComparision(b, j, j + 1);\r\n      if (b[j] > b[j + 1]) {\r\n        // swap ar[j+1] and arr[j] \r\n        await delayForSwap(b, j, j + 1);\r\n        let temp = b[j];\r\n\r\n        b[j] = b[j + 1];\r\n        b[j + 1] = temp;\r\n      }\r\n    }\r\n    setSortedIndex(prevArray=>[...prevArray,len-i-1]);\r\n  }\r\n  setSortedIndex(prevArray=>[...prevArray,0]);\r\n\r\n  //console.log('bubbleSort after', b);\r\n  \r\n};\r\n\r\nexport default bubbleSort;","function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n\r\n let quickSort = async (ar, len, setAr,setSwapIndex,setCompIndex) => {\r\n    //let [swapIndex, setSwapIndex] = useState([-1, -1]);\r\n    let b = ar;\r\n\r\n    //console.log('quickSort before', b);\r\n    let delay = async (b, i, j) => {\r\n      //console.log('swap', b[i], b[j]);\r\n      let temp = b[j];\r\n\r\n      b[j] = b[j + 1];\r\n      b[j + 1] = temp;\r\n      setSwapIndex([j, j + 1]);\r\n      await sleep((100));\r\n      setAr([...b]);\r\n    }\r\n\r\n    for (let i = 0, k = 0; i < len - 1; i++, k++) {\r\n\r\n      for (let j = 0; j < len - i - 1; j++, k++) {\r\n\r\n        if (b[j] > b[j + 1]) {\r\n          // swap ar[j+1] and arr[j] \r\n          await delay(b, i, j);\r\n        }\r\n      }\r\n    }\r\n\r\n    //console.log('quickSort after', b);\r\n\r\n  };\r\n\r\n  export default quickSort;","function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n\r\n let mergeSort = async (ar, len, setAr,setSwapIndex,setCompIndex) => {\r\n    //let [swapIndex, setSwapIndex] = useState([-1, -1]);\r\n    let b = ar;\r\n\r\n    //console.log('mergeSort before', b);\r\n    let delay = async (b, i, j) => {\r\n      //console.log('swap', b[i], b[j]);\r\n      let temp = b[j];\r\n\r\n      b[j] = b[j + 1];\r\n      b[j + 1] = temp;\r\n      setSwapIndex([j, j + 1]);\r\n      await sleep((1));\r\n      setAr([...b]);\r\n    }\r\n\r\n    for (let i = 0, k = 0; i < len - 1; i++, k++) {\r\n\r\n      for (let j = 0; j < len - i - 1; j++, k++) {\r\n\r\n        if (b[j] > b[j + 1]) {\r\n          // swap ar[j+1] and arr[j] \r\n          await delay(b, i, j);\r\n        }\r\n      }\r\n    }\r\n\r\n    //console.log('mergeSort after', b);\r\n\r\n  };\r\n\r\n  export default mergeSort;","function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n\r\n let insertionSort = async (ar, len, setAr,setSwapIndex,setCompIndex) => {\r\n    //let [swapIndex, setSwapIndex] = useState([-1, -1]);\r\n    let b = ar;\r\n\r\n    //console.log('insertionSort before', b);\r\n    let delay = async (b, i, j) => {\r\n      //console.log('swap', b[i], b[j]);\r\n      let temp = b[j];\r\n\r\n      b[j] = b[j + 1];\r\n      b[j + 1] = temp;\r\n      setSwapIndex([j, j + 1]);\r\n      await sleep((1));\r\n      setAr([...b]);\r\n    }\r\n\r\n    for (let i = 0, k = 0; i < len - 1; i++, k++) {\r\n\r\n      for (let j = 0; j < len - i - 1; j++, k++) {\r\n\r\n        if (b[j] > b[j + 1]) {\r\n          // swap ar[j+1] and arr[j] \r\n          await delay(b, i, j);\r\n        }\r\n      }\r\n    }\r\n\r\n    //console.log('insertionSort after', b);\r\n\r\n  };\r\n\r\n  export default insertionSort;","function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n\r\nlet selectionSort = async (ar, len, speed, setAr, setSwapIndex, setSelectedIndex, setCompIndex, setSortedIndex) => {\r\n    //let [swapIndex, setSwapIndex] = useState([-1, -1]);\r\n\r\n    let b = ar;\r\n\r\n    //console.log('selectionSort before', b);\r\n    let delayForSwap = async (b1, i, j) => {\r\n        //console.log('swap', b[i], b[j]);\r\n\r\n        setSwapIndex([i, j]);\r\n        await sleep((speed));\r\n        setAr([...b1]);\r\n        setSwapIndex([]);\r\n    }\r\n    let delayForComparision = async (b1, j, m) => {\r\n        //console.log('swap', b[i], b[j]);\r\n        setSelectedIndex([m]);\r\n        setCompIndex([j]);\r\n        await sleep((speed));\r\n        setAr([...b1]);\r\n        setCompIndex([]);\r\n    }\r\n\r\n\r\nlet min, k, temp;\r\n    for (let i = 0; i < len; i++) {\r\n        min = b[i];\r\n        k = i;\r\n        for (let j = i+1; j < len; j++) {\r\n\r\n            await delayForComparision(b, j, k);\r\n            if (b[j] < min) {\r\n                min = b[j];\r\n                k = j;\r\n            }\r\n        }\r\n            await delayForSwap(b, i, k);\r\n                temp = b[i];\r\n                b[i] = min;\r\n                b[k] = temp;\r\n\r\n        setSortedIndex(prevArray => [...prevArray, i]);\r\n    }\r\n    setSelectedIndex([]);\r\n    setSortedIndex(prevArray => [...prevArray, len-1]);\r\n\r\n    //console.log('selectionSort after', b);\r\n\r\n};\r\n\r\nexport default selectionSort;","import React, { useEffect, useState } from 'react';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\n\nimport SpeedSlider from './components/SpeedSlider';\nimport ArraySizeSlider from './components/ArraySizeSlider';\nimport Bar from './components/Bar';\nimport './App.css';\nimport Header from './components/Header';\nimport AlgosDropdown from './components/AlgosDropdown';\nimport Legends from './components/Legends';\nimport bubbleSort from './algorithms/bubbleSort';\nimport quickSort from './algorithms/quickSort';\nimport mergeSort from './algorithms/mergeSort';\nimport insertionSort from './algorithms/insertionSort';\nimport selectionSort from './algorithms/selectionSort';\n\nfunction App() {\n  let [len, setLen] = useState(30);\n  let [speed, setSpeed] = useState(50);\n  let [swapIndex, setSwapIndex] = useState([]);\n  let [selectedIndex, setSelectedIndex] = useState([]);\n  let [compIndex, setCompIndex] = useState([]);\n  let [sortedIndex, setSortedIndex] = useState([]);\n  let [ar, setAr] = useState([]);\n  let [bars, setBars] = useState(<div></div>);\n  let [slider, setSlider] = useState(null);\n  let [algo, setAlgo] = useState('bubbleSort');\n\n  let onSort = () => {\n    if (algo === 'bubbleSort')\n      bubbleSort(ar, len,speed, setAr, setSwapIndex,setCompIndex,setSortedIndex);\n    else if (algo === 'selectionSort')\n      selectionSort(ar, len,speed, setAr, setSwapIndex,setSelectedIndex,setCompIndex,setSortedIndex);  \n    else if (algo === 'quickSort')\n      quickSort(ar, len,speed, setAr, setSwapIndex,setCompIndex,setSortedIndex);\n    else if (algo === 'mergeSort')\n      mergeSort(ar, len,speed, setAr, setSwapIndex,setCompIndex,setSortedIndex);\n    else if (algo === 'insertionSort')\n      insertionSort(ar, len,speed, setAr, setSwapIndex,setCompIndex,setSortedIndex);\n  }\n\n  useEffect(() => {\n    setSlider(<><ArraySizeSlider value={len} setValue={(val) => setLen(val)} /><SpeedSlider setVal={(val) => setSpeed(val)} /></>)\n  }, [len,speed]);\n\n  useEffect(() => {\n    setAr(Array.from({ length: len }, () => Math.floor(Math.random() * 100)));\n    setSwapIndex([]);\n    setCompIndex([]);\n    setSortedIndex([]);\n    setSelectedIndex([]);\n  }, [len, algo,speed]);\n\n  useEffect(() => {\n    setBars(ar.map((x, i) => {\n      return <Bar i={i} val={x} max={100} len={len} swapRef={swapIndex} selectedRef={selectedIndex} compRef={compIndex} sortedRef={sortedIndex} />\n    }));\n    //setSwapIndex([-1,-1]);\n  }, [ar, len, swapIndex, selectedIndex, compIndex, sortedIndex]);\n\n\n\n\n  // console.log('ar', ar);\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"row secondary-header\" >\n        <AlgosDropdown algo={algo} setAlgo={setAlgo} />\n        {\n          slider\n        }\n\n        <button\n          className=\"btn\"\n          onClick={() => onSort()}\n        >\n          <PlaylistPlayIcon /> Sort\n      </button>\n      \n      </div>\n\n      <div id=\"chart\" className={(window.innerWidth>480)?'row':'column'}>\n        {\n          bars\n        }\n      </div>\n      <Legends algo={algo} />\n      <p id=\"foot-note\">Imagined by UnEmployed Alumni</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}