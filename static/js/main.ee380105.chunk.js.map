{"version":3,"sources":["components/SpeedSlider.js","components/ArraySizeSlider.js","components/Bar.js","assets/header.jpg","assets/favicon.png","components/Header.js","components/AlgosDropdown.js","components/Legends.js","algorithms/bubbleSort.js","algorithms/quickSort.js","algorithms/mergeSort.js","algorithms/insertionSort.js","algorithms/selectionSort.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","input","SpeedSlider","props","classes","React","useState","value","setValue","useEffect","setVal","className","Typography","id","gutterBottom","Grid","container","spacing","alignItems","item","xs","Slider","onChange","event","newValue","aria-labelledby","Input","margin","target","Number","onBlur","inputProps","step","min","max","type","ArraySizeSlider","sorting","onClick","window","location","reload","Bar","len","algo","val","i","swapRef","selectedRef","compRef","sortedRef","quickedIndex","colorRef","innerWidth","height","innerHeight","includes","Tooltip","title","style","border","backgroundColor","Header","src","algoIcon","alt","header","href","rel","fontSize","theme","formControl","minWidth","selectEmpty","marginTop","AlgosDropdown","setAlgo","FormControl","variant","InputLabel","Select","labelId","label","MenuItem","Legends","fontWeight","bubbleSort","selectionSort","quickSort","mergeSort","insertionSort","map","x","justifyContent","sleep","ms","Promise","resolve","setTimeout","ar","speed","setAr","setSwapIndex","setCompIndex","setSortedIndex","a","b","delayForSwap","j","delayForComparision","temp","prevArray","setSelectedIndex","setQuickedIndex","quickSort1","array","left","right","delayForBreak","pivot","delayForPivot","delayForScanningPossiblePivot","prev","b1","k","m","p","q","merge","mergeSort1","ar1","start","end","lenOfAr","length","mid","array1","console","log","slice","ans","aLen","bLen","delayForMerge","push","delayForJoin","b2","hoho","curIndex","App","setLen","setSpeed","swapIndex","selectedIndex","compIndex","sortedIndex","bars","setBars","arraySlider","setArraySlider","speedSlider","setSpeedSlider","setSorting","onSort","Array","from","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee380105.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n  },\r\n  input: {\r\n    width: 42,\r\n  },\r\n});\r\n\r\nexport default function SpeedSlider(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(50);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n   \r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.setVal(100-value);\r\n  },[value,props]);\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 0) {\r\n      setValue(0);\r\n    } else if (value > 100) {\r\n      setValue(100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"input-slider\" gutterBottom>\r\n        Select Speed\r\n      </Typography>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item>\r\n          <SpeedIcon />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider\r\n            value={typeof value === 'number' ? value : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={value}\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              step: 10,\r\n              min: 0,\r\n              max: 100,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n  },\r\n  input: {\r\n    width: 42,\r\n  },\r\n});\r\n\r\nexport default function ArraySizeSlider({ value, sorting, setValue }) {\r\n  const classes = useStyles();\r\n  //const [value, setValue] = React.useState(30);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 0) {\r\n      setValue(0);\r\n    } else if (value > 100) {\r\n      setValue(100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} onClick={() => {\r\n      if (sorting) {\r\n        window.location.reload()\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }}  >\r\n      <Typography id=\"input-slider\" gutterBottom>\r\n        Select Array Size\r\n      </Typography>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item>\r\n          <PlaylistAddIcon />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider\r\n            value={typeof value === 'number' ? value : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={value}\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              step: 10,\r\n              min: 0,\r\n              max: 100,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function Bar({ len, algo, max, val, i, swapRef, selectedRef, compRef, sortedRef,quickedIndex }) {\r\n    let colorRef = '#3cb1e0';\r\n    let width = (window.innerWidth) / (2.4 * len);\r\n    let height = ((3 * window.innerHeight / 5) / max) * val;\r\n\r\n\r\n\r\n    if (algo === 'quickSort') {\r\n        if (i >= selectedRef[0] && i < selectedRef[1]) {\r\n            colorRef = \"#ff00fa\";\r\n        }\r\n        \r\n\r\n        if (i >= sortedRef[0] && i < sortedRef[1]) {\r\n            colorRef = \"#09f272\";\r\n        }\r\n\r\n        if (quickedIndex.includes(i)) {\r\n            colorRef = \"#09f272\";\r\n        }\r\n       \r\n       \r\n    }else if (algo === 'mergeSort') {\r\n        if (i >= selectedRef[0] && i < selectedRef[1]) {\r\n            colorRef = \"yellow\";\r\n        }\r\n        \r\n        if (i >= sortedRef[0] && i < sortedRef[1]) {\r\n            colorRef = \"#09f272\";\r\n        }\r\n       \r\n    } else {\r\n        if (sortedRef.includes(i)) {\r\n            colorRef = \"#09f272\";\r\n        }\r\n\r\n        if (selectedRef.includes(i)) {\r\n            colorRef = \"#ff00fa\";\r\n        }\r\n    }\r\n\r\n    if (compRef.includes(i)) {\r\n        colorRef = \"yellow\";\r\n    }\r\n    \r\n    if (swapRef.includes(i)) {\r\n            colorRef = \"red\";\r\n        }\r\n        \r\n    if (window.innerWidth < 500) {\r\n        height = (window.innerHeight) / (2.4 * len);\r\n        width = ((3 * window.innerWidth / 5) / max) * val;\r\n    }\r\n    return (\r\n        <Tooltip key={i} title={val} >\r\n\r\n            <li className=\"bar\" key={i} style={{\r\n                border: '1px solid black',\r\n                backgroundColor: colorRef,\r\n                width,\r\n                height\r\n            }}>\r\n                {val}\r\n            </li>\r\n        </Tooltip>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/header.84f5bc42.jpg\";","export default __webpack_public_path__ + \"static/media/favicon.a5226a6a.png\";","import React from 'react';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\n\r\nimport header from '../assets/header.jpg';\r\nimport algoIcon from '../assets/favicon.png';\r\nimport '../App.css';\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"container\"  >\r\n            <div className=\"header-text\"><img src={algoIcon} alt=\"Algo-Icon\" className=\"algo-image\" /> Algorithms Visualizer</div>\r\n            <img src={header} alt=\"header\" className=\"header-image\" />\r\n            <a href=\"https://github.com/aashishwastaken/Sorting-Algorithm-Visualizer\"\r\n                target=\"_blank\" rel=\"noreferrer\" >\r\n                <div className=\"button\">GitHub<LaunchIcon style={{fontSize:\"1em\",width:'em'}} />\r\n                </div>\r\n            </a>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AlgosDropdown({algo,sorting,setAlgo}) {\r\n    const classes = useStyles();\r\n    \r\n\r\n    const handleChange = (event) => {\r\n        setAlgo(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl} onClick={() => {\r\n            if (sorting) {\r\n              window.location.reload()\r\n            }\r\n            else {\r\n              return null;\r\n            }\r\n          }} >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">Algorithm</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={algo}\r\n                onChange={handleChange}\r\n                label=\"Algorithm\"\r\n            >\r\n                \r\n                <MenuItem value=\"bubbleSort\">Bubble Sort</MenuItem>\r\n                <MenuItem value=\"selectionSort\">Selection Sort</MenuItem>\r\n                <MenuItem value=\"mergeSort\">Merge Sort</MenuItem>\r\n                <MenuItem value=\"insertionSort\">Insertion Sort</MenuItem>\r\n                <MenuItem value=\"quickSort\">Quick Sort</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../App.css';\r\n\r\nexport default function Legends({algo}) {\r\n\r\n    let legendsData={\r\n        bubbleSort:[\r\n            ['red','Swap'],\r\n            ['yellow','Comparision (inside \"bubble\")'],\r\n            ['#09f272','Sorted']\r\n        ],\r\n        selectionSort:[\r\n            ['red','Swap'],\r\n            ['yellow','Hunting the min value'],\r\n            ['#ff00fa','Current \"selected\" min value'],\r\n            ['#09f272','Sorted']\r\n        ],\r\n        quickSort:[\r\n            ['#ff00fa','Current subarray under sorting'],\r\n            ['red','Current \"pivot\"'],\r\n            ['yellow','Arranging elements to find new pivot position'],\r\n            ['#09f272','Sorted elements which were a pivot at some time'],\r\n            ['#3cb1e0','Sorted elements which were never a pivot at any time (after sorting)']\r\n        ],\r\n        mergeSort:[\r\n            ['red','Comparing the 2 elements of 2 sorted sub-arrays and \"merging\" the smaller one to the final array'],\r\n            ['yellow','The sub-array to be broken in half'],\r\n            ['#09f272','Sorted']\r\n        ],\r\n        insertionSort:[\r\n            ['red','Swap'],\r\n            ['yellow','Comparision'],\r\n            ['#ff00fa','Element about to be \"inserted\"'],\r\n            ['#09f272','Sorted']\r\n        ]\r\n\r\n    }\r\n//console.log(algo);\r\n    return (\r\n        <div id='legend'><span style={{fontWeight:600}}>Legends</span>\r\n            {legendsData[algo].map((x,i)=>{\r\n                \r\n                return ( <div className=\"row\" key={`legend-${i}`} style={{justifyContent:'flex-start'}}>\r\n                    <div className=\"legendColor\" style={{backgroundColor:x[0]}} ></div>\r\n                    <div className=\"legendTitle\" >{x[1]}</div>\r\n                    \r\n                </div>);\r\n})}\r\n        </div>\r\n    )\r\n}\r\n","function sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n\r\nlet bubbleSort = async (ar, len,speed, setAr, setSwapIndex, setCompIndex,setSortedIndex) => {\r\n  //let [swapIndex, setSwapIndex] = useState([-1, -1]);\r\n  \r\n    let b = ar;\r\n\r\n  //console.log('bubbleSort before', b);\r\n  let delayForSwap = async (b, i, j) => {\r\n    //console.log('swap', b[i], b[j]);\r\n\r\n    setSwapIndex([i, j]);\r\n    await sleep((speed));\r\n    setAr([...b]);\r\n    setSwapIndex([-1, -1]);\r\n  }\r\n  let delayForComparision = async (b, i, j) => {\r\n    //console.log('swap', b[i], b[j]);\r\n\r\n    setCompIndex([i, j]);\r\n    await sleep((speed));\r\n    setAr([...b]);\r\n    setCompIndex([-1, -1]);\r\n  }\r\n \r\n    \r\n   \r\n  for (let i = 0; i < len - 1; i++) {\r\n\r\n    for (let j = 0; j < len - i - 1; j++ ) {\r\n      await delayForComparision(b, j, j + 1);\r\n      if (b[j] > b[j + 1]) {\r\n        // swap ar[j+1] and arr[j] \r\n        await delayForSwap(b, j, j + 1);\r\n        let temp = b[j];\r\n\r\n        b[j] = b[j + 1];\r\n        b[j + 1] = temp;\r\n      }\r\n    }\r\n    setSortedIndex(prevArray=>[...prevArray,len-i-1]);\r\n  }\r\n  setSortedIndex(prevArray=>[...prevArray,0]);\r\n\r\n  //console.log('bubbleSort after', b);\r\n  \r\n};\r\n\r\nexport default bubbleSort;","function sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nlet quickSort = async (ar, len, speed, setAr, setSwapIndex, setSelectedIndex, setCompIndex, setSortedIndex,setQuickedIndex) => {\r\n  //let [swapIndex, setSwapIndex] = useState([-1, -1]);\r\n\r\n  let array = ar;\r\n\r\n  let delayForScanningPossiblePivot = async (b1, k,m) => {\r\n    //console.log('swap', b[i], b[j]);\r\n\r\n    setCompIndex([k,m]);\r\n    await sleep(speed);\r\n    //console.log('sorted==',[...array1.slice(0, i)], [...b1], [...array1.slice(j+1)]);\r\n    setAr([...b1]);\r\n\r\n    await sleep(speed);\r\n   // setSortedIndex([i, j + 1]);\r\n    setCompIndex([]);\r\n  }\r\n\r\n  let delayForPivot = async (b1, p,q) => {\r\n    //console.log('swap', b[i], b[j]);\r\n\r\n      setSwapIndex([p,q]);\r\n    await sleep(speed);\r\n    //console.log('sorted==',[...array1.slice(0, i)], [...b1], [...array1.slice(j+1)]);\r\n    setAr([...b1]);\r\n\r\n    await sleep(speed);\r\n   // setSortedIndex([i, j + 1]);\r\n    //setSwapIndex([]);\r\n  }\r\n\r\n  let delayForBreak = async (b1, j, m) => {\r\n    //console.log('swap', b[i], b[j]);\r\n\r\n    setSelectedIndex([j, m]);\r\n    // setCompIndex([j]);\r\n    await sleep(speed);\r\n     setAr([...b1]);\r\n    // setCompIndex([]);\r\n  }\r\n\r\n\r\n\r\n async function quickSort1(array, left, right) {\r\n   await delayForBreak(array,left,right);\r\n    //console.log('started');\r\n    if (left < right) {\r\n      let pivot = right;\r\n      await delayForPivot(array,pivot);\r\n      \r\n      let i = left - 1, temp,j;\r\n      //console.log('pivot,i', pivot, i);\r\n\r\n      ///////////looking for new pivot position\r\n      for ( j = left; j < right; j++) {\r\n        await delayForScanningPossiblePivot(array,i,j);\r\n        if (array[j] < array[pivot]) {\r\n          i++;\r\n          temp = array[j];\r\n          array[j] = array[i];\r\n          array[i] = temp;\r\n        }\r\n      }\r\n      ///////////looking for new pivot position\r\n\r\n      \r\n      //console.log('pivot,j==', pivot, j,i+1);\r\n      ////////////swapping pivot to the right place\r\n      temp = array[pivot];\r\n      array[pivot] = array[i + 1];\r\n      array[i + 1] = temp;\r\n      pivot = i + 1;\r\n\r\n      await delayForPivot(array,pivot);\r\n      ////////////swapping pivot to the right place\r\n      //console.log('array',array);\r\n\r\n      setQuickedIndex(prev=>[...prev,pivot]);\r\n\r\n     await quickSort1(array, left, pivot - 1);\r\n     await quickSort1(array, pivot + 1, right);\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  await quickSort1(array, 0, len-1);\r\n  setSwapIndex([]);\r\n  //console.log('aaaaaa', await hoho);\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\n\r\nexport default quickSort;","function sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n\r\n\r\n\r\n\r\nlet mergeSort = async (ar, len, speed, setAr, setSwapIndex, setSelectedIndex, setCompIndex, setSortedIndex) => {\r\n  //let [swapIndex, setSwapIndex] = useState([-1, -1]);\r\n\r\n  let array1 = ar;\r\n\r\n  let delayForMerge = async (b2,start,end,i,j) => {\r\n    //console.log('swap', b[i], b[j]);\r\n\r\n    setSwapIndex([b2.length+start]);\r\n    await sleep(speed);\r\n    //console.log('sorted==',[...array1.slice(0, i)], [...b1], [...array1.slice(j+1)]);\r\n    setAr(prev =>[...prev.slice(0, start), ...b2, ...prev.slice(start+b2.length)]);\r\n\r\n    await sleep(speed);\r\n  //  setSortedIndex([start,end]);\r\n    setSwapIndex([]);\r\n  }\r\n\r\n  //console.log('selectionSort before', b);\r\n  let delayForJoin = async (b1, i, j) => {\r\n    //console.log('swap', b[i], b[j]);\r\n\r\n  //  setSwapIndex([i,j]);\r\n    await sleep(speed);\r\n    //console.log('sorted==',[...array1.slice(0, i)], [...b1], [...array1.slice(j+1)]);\r\n    setAr(prev =>[...prev.slice(0, i), ...b1, ...array1.slice(j + 1)]);\r\n\r\n    await sleep(speed);\r\n    setSortedIndex([i, j+1]);\r\n    //setSwapIndex([]);\r\n  }\r\n  let delayForBreak = async (b1, j, m) => {\r\n    //console.log('swap', b[i], b[j]);\r\n\r\n    setSelectedIndex([j, m]);\r\n    // setCompIndex([j]);\r\n    await sleep(speed);\r\n    // setAr([...b1]);\r\n    // setCompIndex([]);\r\n  }\r\n\r\n  async function merge(a, b, start, end) {\r\n    let ans = [];\r\n    let i = 0, j = 0;\r\n    let aLen = a.length, bLen = b.length;\r\n    while ((i < aLen) && (j < bLen)) {\r\n      await delayForMerge(ans, start,end,i,j);\r\n      if (a[i] <= b[j]) {\r\n        ans.push(a[i]);\r\n        i++;\r\n      } else if (a[i] > b[j]) {\r\n        ans.push(b[j]);\r\n        j++;\r\n      }\r\n    }\r\n\r\n    if (i < aLen) {\r\n      ans.push(...a.slice(i));\r\n    }\r\n\r\n    if (j < bLen) {\r\n      ans.push(...b.slice(j));\r\n    }\r\n    await delayForJoin(ans, start, end);\r\n    console.log('just merged', ans);\r\n    return ans;\r\n  }\r\n\r\n\r\n  async function mergeSort1(ar1, start, end) {\r\n    let lenOfAr = ar1.length;\r\n    let mid = lenOfAr / 2;\r\n\r\n    await delayForBreak(array1, start, end);\r\n    console.log('just broke', ar1);\r\n\r\n    if (lenOfAr <= 1) {\r\n      return await ar1;\r\n    }\r\n\r\n\r\n    let left = ar1.slice(0, mid);\r\n    let right = ar1.slice(mid, lenOfAr);\r\n    return await merge(await mergeSort1(left, start, start + mid - 1),\r\n      await mergeSort1(right, start + mid, start + lenOfAr - 1),\r\n      start, end);\r\n  }\r\n\r\n\r\n\r\n  let hoho = await mergeSort1(array1, 0, len);\r\n  setSwapIndex([]);\r\n  console.log('aaaaaa', await hoho);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //  let min, k, temp;\r\n  //      for (let i = 0; i < len; i++) {\r\n  //          min = b[i];\r\n  //          k = i;\r\n  //          for (let j = i+1; j < len; j++) {\r\n\r\n  //              await delayForComparision(b, j, k);\r\n  //              if (b[j] < min) {\r\n  //                  min = b[j];\r\n  //                  k = j;\r\n  //              }\r\n  //          }\r\n  //              await delayForSwap(b, i, k);\r\n  //                  temp = b[i];\r\n  //                  b[i] = min;\r\n  //                  b[k] = temp;\r\n\r\n  //          setSortedIndex(prevArray => [...prevArray, i]);\r\n  //      }\r\n  //      setSelectedIndex([]);\r\n  //      setSortedIndex(prevArray => [...prevArray, len-1]);\r\n\r\n  //console.log('selectionSort after', b);\r\n\r\n};\r\n\r\nexport default mergeSort;","function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms+100));\r\n  }\r\n\r\n\r\n let insertionSort = async (ar, len, speed,setAr,setSwapIndex,setSelectedIndex,setCompIndex,setSortedIndex) => {\r\n   //let [swapIndex, setSwapIndex] = useState([-1, -1]);\r\n\r\n   let b = ar;\r\n\r\n   //console.log('selectionSort before', b);\r\n   let delayForSwap = async (b1, i, j) => {\r\n       //console.log('swap', b[i], b[j]);\r\n\r\n       setSwapIndex([i, j]);\r\n       await sleep(speed);\r\n       setAr([...b1]);\r\n       setSwapIndex([]);\r\n   }\r\n   let delayForComparision = async (b1, j, m) => {\r\n       //console.log('swap', b[i], b[j]);\r\n       setSelectedIndex([m]);\r\n       setCompIndex([j]);\r\n       await sleep(speed);\r\n       setAr([...b1]);\r\n       setCompIndex([]);\r\n      // setSelectedIndex([]);\r\n   }\r\n\r\n\r\n  \r\n  let curIndex, temp;\r\n  setSortedIndex(prevArray => [...prevArray, 0]);\r\n  for (let i = 0; i < b.length; i++) {\r\n    curIndex = i;\r\n    while (curIndex > 0) {\r\n      await delayForComparision(b, curIndex - 1, curIndex);\r\n      if (b[curIndex - 1] < b[curIndex]) {\r\n        break;\r\n      }else{\r\n        temp = b[curIndex];\r\n        await delayForSwap(b,curIndex - 1, curIndex);\r\n        b[curIndex] = b[curIndex - 1];\r\n        b[curIndex - 1] = temp;\r\n        curIndex--;\r\n      }\r\n    }\r\n    setSortedIndex(prevArray => [...prevArray, i]);\r\n  }\r\n\r\n\r\n   setSelectedIndex([]);\r\n   setSortedIndex(prevArray => [...prevArray, len-1]);\r\n\r\n   //console.log('selectionSort after', b);\r\n\r\n\r\n  };\r\n\r\n  export default insertionSort;","function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n\r\nlet selectionSort = async (ar, len, speed, setAr, setSwapIndex, setSelectedIndex, setCompIndex, setSortedIndex) => {\r\n    //let [swapIndex, setSwapIndex] = useState([-1, -1]);\r\n\r\n    let b = ar;\r\n\r\n    //console.log('selectionSort before', b);\r\n    let delayForSwap = async (b1, i, j) => {\r\n        //console.log('swap', b[i], b[j]);\r\n\r\n        setSwapIndex([i, j]);\r\n        await sleep((speed));\r\n        setAr([...b1]);\r\n        setSwapIndex([]);\r\n    }\r\n    let delayForComparision = async (b1, j, m) => {\r\n        //console.log('swap', b[i], b[j]);\r\n        setSelectedIndex([m]);\r\n        setCompIndex([j]);\r\n        await sleep((speed));\r\n        setAr([...b1]);\r\n        setCompIndex([]);\r\n    }\r\n\r\n\r\nlet min, k, temp;\r\n    for (let i = 0; i < len; i++) {\r\n        min = b[i];\r\n        k = i;\r\n        for (let j = i+1; j < len; j++) {\r\n\r\n            await delayForComparision(b, j, k);\r\n            if (b[j] < min) {\r\n                min = b[j];\r\n                k = j;\r\n            }\r\n        }\r\n            await delayForSwap(b, i, k);\r\n                temp = b[i];\r\n                b[i] = min;\r\n                b[k] = temp;\r\n\r\n        setSortedIndex(prevArray => [...prevArray, i]);\r\n    }\r\n    setSelectedIndex([]);\r\n    setSortedIndex(prevArray => [...prevArray, len-1]);\r\n\r\n    //console.log('selectionSort after', b);\r\n\r\n};\r\n\r\nexport default selectionSort;","import React, { useEffect, useState } from 'react';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\n\nimport SpeedSlider from './components/SpeedSlider';\nimport ArraySizeSlider from './components/ArraySizeSlider';\nimport Bar from './components/Bar';\nimport './App.css';\nimport Header from './components/Header';\nimport AlgosDropdown from './components/AlgosDropdown';\nimport Legends from './components/Legends';\nimport bubbleSort from './algorithms/bubbleSort';\nimport quickSort from './algorithms/quickSort';\nimport mergeSort from './algorithms/mergeSort';\nimport insertionSort from './algorithms/insertionSort';\nimport selectionSort from './algorithms/selectionSort';\n\nfunction App() {\n  let [len, setLen] = useState(30);\n  let [speed, setSpeed] = useState(50);\n  let [swapIndex, setSwapIndex] = useState([]);\n  let [selectedIndex, setSelectedIndex] = useState([]);\n  let [quickedIndex, setQuickedIndex] = useState([]);\n  let [compIndex, setCompIndex] = useState([]);\n  let [sortedIndex, setSortedIndex] = useState([]);\n  let [ar, setAr] = useState([]);\n  let [bars, setBars] = useState(<div></div>);\n  let [arraySlider, setArraySlider] = useState(null);\n  let [speedSlider, setSpeedSlider] = useState(null);\n  let [algo, setAlgo] = useState('quickSort');\n  let [sorting, setSorting] = useState(false);\n\n  let onSort = async () => {\n\n    setSorting(true);\n    if (algo === 'bubbleSort')\n      await bubbleSort(ar, len, speed, setAr, setSwapIndex, setCompIndex, setSortedIndex);\n    else if (algo === 'selectionSort')\n     await selectionSort(ar, len, speed, setAr, setSwapIndex, setSelectedIndex, setCompIndex, setSortedIndex);\n    else if (algo === 'quickSort') \n      await quickSort(ar, len, speed, setAr, setSwapIndex, setSelectedIndex, setCompIndex, setSortedIndex, setQuickedIndex);\n    else if (algo === 'mergeSort')\n     await mergeSort(ar, len, speed, setAr, setSwapIndex, setSelectedIndex, setCompIndex, setSortedIndex);\n    else if (algo === 'insertionSort')\n    await  insertionSort(ar, len, speed, setAr, setSwapIndex, setSelectedIndex, setCompIndex, setSortedIndex);\n    setSorting(false);\n  }\n\n  useEffect(() => {\n    setArraySlider(<ArraySizeSlider value={len} sorting={sorting} setValue={(val) => setLen(val)} />)\n  }, [len, sorting]);\n  useEffect(() => {\n    setSpeedSlider(<SpeedSlider setVal={(val) => setSpeed(val)} />)\n  }, [speed]);\n\n  useEffect(() => {\n    setAr(Array.from({ length: len }, () => Math.floor(1 + Math.random() * 100)));\n    setSwapIndex([]);\n    setCompIndex([]);\n    setSortedIndex([]);\n    setSelectedIndex([]);\n    setQuickedIndex([]);\n  }, [len, algo]);\n\n  useEffect(() => {\n    setBars(<div></div>);\n    setBars(ar.map((x, i) => {\n      return <Bar key={`bar-${i}`}\n        i={i}\n        val={x}\n        max={100}\n        len={len}\n        algo={algo}\n        swapRef={swapIndex}\n        selectedRef={selectedIndex}\n        compRef={compIndex}\n        sortedRef={sortedIndex}\n        quickedIndex={quickedIndex} />\n    }));\n    //setSwapIndex([-1,-1]);\n  }, [algo, swapIndex, quickedIndex, selectedIndex, compIndex, sortedIndex]);\n\n\n\n\n  // console.log('ar', ar);\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"row secondary-header\" >\n        <AlgosDropdown algo={algo} sorting={sorting} setAlgo={setAlgo} />\n        {\n          arraySlider\n        }\n        {\n          speedSlider\n        }\n\n        <button\n          className=\"btn\"\n          onClick={async () => await onSort()}\n        >\n          <PlaylistPlayIcon /> Sort\n      </button>\n\n      </div>\n\n      <div id=\"chart\" className={(window.innerWidth > 480) ? 'row' : 'column'}>\n        {\n          bars\n        }\n      </div>\n      <Legends algo={algo} />\n      <p id=\"foot-note\">Imagined by UnEmployed Alumni</p>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}